apply plugin: 'com.android.library'


apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion sdk_version


    defaultConfig {
        minSdkVersion 16
        targetSdkVersion sdk_version
        versionCode 128
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}


kapt {
    generateStubs = true
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.android.support:appcompat-v7:27.1.0'
    api 'com.android.support:recyclerview-v7:27.1.0'


    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api "org.jetbrains.anko:anko-commons:$anko_version"
    api "org.jetbrains.anko:anko-design:$anko_version"
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    api "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"
    api "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    api "io.reactivex.rxjava2:rxjava:$rxjava_version"
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.okhttp3:okhttp:${okhttp_version}"
    api "com.squareup.okhttp3:logging-interceptor:${okhttp_version}"
    api "com.squareup.retrofit2:retrofit:${retrofit_version}"
    api "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    api "com.squareup.retrofit2:adapter-rxjava2:${retrofit_version}"
    api "com.google.dagger:dagger:${dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${dagger_version}"

    api "com.trello.rxlifecycle2:rxlifecycle-kotlin:${rxlifecycle_version}"
    api "com.trello.rxlifecycle2:rxlifecycle-components:${rxlifecycle_version}"

    //Glide  annotationProcessor
    api "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    //Circle ImageView
    api "de.hdodenhof:circleimageview:${circle_imageView_version}"

    api "com.jph.takephoto:takephoto_library:${takephoto_version}"

    api "com.bigkoo:alertview:${alert_view_version}"


    api "com.ashokvarma.android:bottom-navigation-bar:${bottom_navigation_bar_version}"

    //1.1.2
    api "com.yanzhenjie:permission:${permission_version}"

    //七牛
    api 'com.qiniu:qiniu-android-sdk:7.3.+'

    api "com.alibaba:arouter-api:${arouter_api_version}"


    //1.4.10
    api "com.youth.banner:banner:${banner_version}"

//    api "com.github.shts:TriangleLabelView:${triangleLabel_version}"

    //release-v1.0.5
//    api "com.github.crosswall:Android-Coverflow:${coverflow_version}"
//    api 'com.github.crosswall:Android-Coverflow:release-v1.0.5'

//    api 'com.github.Kennyc1012:MultiStateView:1.3.2'


}
